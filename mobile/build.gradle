
buildscript {
    repositories {
        google()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://jitpack.io" }
        jcenter()
        maven {
            name 'Sonatype SNAPSHOTs';
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.triplet.play'


repositories {
    google()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

if (keystorePropertiesFile.canRead()) {
// Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    throw new GradleException("Could not read keystore.properties!")
}


android {
    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "release"
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion '28.0.3'
    defaultConfig {

        applicationId "me.calebjones.spacelaunchnow"
        manifestPlaceholders = [appNameLabel         : "@string/app_name",
                                manifestApplicationId: "${applicationId}",]

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName computeVersionName()
        versionCode computeVersionCode()
        multiDexEnabled true
        wearAppUnbundled true

    }
    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            applicationIdSuffix '.debug'
            manifestPlaceholders = [appNameLabel         : "SLN - Debug",
                                    manifestApplicationId: "me.calebjones.spacelaunchnow.ui.debug"]
            debuggable true
            renderscriptOptimLevel 3
            versionNameSuffix "-debug-b${defaultConfig.versionCode}"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def computeVersionName() {
    return String.format('%d.%d.%d', app.versionMajor, app.versionMinor, app.versionPatch)
}

def computeVersionCode() {
    return 1000000 + app.versionMajor * 10000 + app.versionMinor * 1000 + app.versionPatch * 100 + app.versionCode
}

play {
    serviceAccountCredentials = rootProject.file("publisher-key.json")
    track = "internal"
    releaseStatus = "completed"
    commit = true
}

dependencies {
    implementation project(':data')
    implementation project(':common')
    implementation project(':astronauts')
    implementation project(':news')
    implementation project(':spacestations')
    implementation project(':events')
    // Android Official Libraries
    implementation deps.archcore_coreRuntime
    implementation deps.appcompat
    implementation deps.browser
    implementation deps.cardview
    implementation deps.palette
    implementation deps.lifecycleExtensions
    implementation deps.material
    implementation deps.vectordrawable
    implementation deps.percentlayout
    implementation deps.legacySupportv4
    implementation deps.firebaseCore
    implementation deps.playWearable
    implementation deps.playAds
    implementation deps.constraintLayout
    implementation deps.easyprefs
    // Architecture and Tools
    implementation deps.once
    implementation deps.crashlytics
    implementation deps.dexter
    implementation deps.statefulLayout
    // Billing
    implementation deps.inAppbilling
    implementation deps.workManager
    // Views and Animations
    implementation deps.materialDialogCore
    implementation deps.materialDialogCommons
    implementation deps.photoView
    implementation deps.GDPRDialog
    implementation deps.transitionseverywhere
    implementation deps.materialAbout
    implementation deps.markdownView
    implementation deps.colorPicker
    implementation deps.aesthetic
    implementation deps.glide
    annotationProcessor deps.glideCompiler
    implementation deps.glidepalette
    implementation deps.onboarding
    implementation deps.circleImageView
    implementation deps.materialdaterangepicker
    implementation deps.recyclerview_fastscroll
    implementation deps.glideTransformation
    implementation deps.expandableLayout
    implementation deps.expandableTextview
    implementation deps.gpuImageLibrary
    implementation deps.materialdrawer
    implementation deps.forecast
    implementation deps.materialValue

    // HTTP Related libraries
    implementation deps.retrofit
    implementation deps.okhttp
    implementation deps.converter_gson
    implementation deps.gson
    implementation deps.calendarprovider
    // Iconography
    implementation deps.iconicsCore
    implementation deps.googleMaterialTypeface
    implementation deps.communityMaterialTypeface
    implementation deps.weathericon
    implementation deps.fontawesomeTypeface
    implementation deps.rxjava
    implementation deps.rxandroid
    implementation deps.badge
    //Twitter
    implementation deps.twitterCore
    implementation deps.twitterUi
    // Firebase Messaging
    implementation deps.firebaseMessaging
    implementation deps.timber
    implementation deps.butterknife
    annotationProcessor deps.butterknifeCompiler
    implementation deps.bottomNavigation
    implementation deps.preferences
}

apply plugin: 'com.google.gms.google-services'
