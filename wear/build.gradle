apply plugin: 'com.android.application'


def versionMajor = 1
def versionMinor = 2
def versionPatch = 0
def appVersionCode = 0
def appVersionName = ""
def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
def versionPropsFile = file('version.properties')
if (versionPropsFile.canRead()) {
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    List<String> runTasks = gradle.startParameter.getTaskNames()
    def versionBuild = versionProps['VERSION_CODE'].toInteger()
    for (String item : runTasks) {
        if (item.contains("assemble") && item.contains("Release")) {
            versionBuild = versionBuild + 1
            versionProps['VERSION_CODE'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }
    }

    versionProps['VERSION_CODE'] = versionBuild.toString()
    versionProps.store(versionPropsFile.newWriter(), null)
    appVersionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    appVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"
} else {
    throw new GradleException("Could not read version.properties!")
}

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        flavorDimensions "release"
        manifestPlaceholders = [ applicationLabel:"@string/app_name"]
        applicationId "me.calebjones.spacelaunchnow"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode appVersionCode
        versionName appVersionName
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            manifestPlaceholders = [ applicationLabel:"SLN - Debug"]
        }
    }

    productFlavors {
        debugTesting {

        }
        prod {

        }

        beta {
            dimension "release"
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    provided 'com.google.android.wearable:wearable:2.1.0'
    compile 'com.google.android.support:wearable:2.1.0'
    compile "com.google.android.gms:play-services-wearable:$rootProject.playServicesVersion"
    compile 'com.jakewharton.timber:timber:4.6.0'
    compile 'blue.aodev:material-values:1.1.1'
    compile 'com.android.support:palette-v7:27.0.1'
}
